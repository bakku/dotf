// Code generated by MockGen. DO NOT EDIT.
// Source: sysop.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSysOpsProvider is a mock of SysOpsProvider interface
type MockSysOpsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockSysOpsProviderMockRecorder
}

// MockSysOpsProviderMockRecorder is the mock recorder for MockSysOpsProvider
type MockSysOpsProviderMockRecorder struct {
	mock *MockSysOpsProvider
}

// NewMockSysOpsProvider creates a new mock instance
func NewMockSysOpsProvider(ctrl *gomock.Controller) *MockSysOpsProvider {
	mock := &MockSysOpsProvider{ctrl: ctrl}
	mock.recorder = &MockSysOpsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSysOpsProvider) EXPECT() *MockSysOpsProviderMockRecorder {
	return m.recorder
}

// GetEnvVar mocks base method
func (m *MockSysOpsProvider) GetEnvVar(s string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvVar", s)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEnvVar indicates an expected call of GetEnvVar
func (mr *MockSysOpsProviderMockRecorder) GetEnvVar(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvVar", reflect.TypeOf((*MockSysOpsProvider)(nil).GetEnvVar), s)
}
